{"docstore/metadata": {"68c574e8-7a7c-4ed6-adf6-2b014bf04adc": {"doc_hash": "b3cd6b969ea1bb9dd4b70cd54ca531b37c4a9e2a9982c42d3d6999b0f9fb7e40"}, "8c759dad-b024-463c-b108-d0e508e4b3d4": {"doc_hash": "169d139ce04e3faabd0e2f2bb73671e452f910dda5d78bade12e90dd62123217", "ref_doc_id": "68c574e8-7a7c-4ed6-adf6-2b014bf04adc"}, "139b4352-c8f5-476f-a3d5-f4a121591f37": {"doc_hash": "b9d3dbbf8cd1893bce6d5cdfe64f53930de154f5659ad818067aec1a668eaae3", "ref_doc_id": "68c574e8-7a7c-4ed6-adf6-2b014bf04adc"}, "77b342e5-5348-4aba-b3fe-61c7d9fdba2c": {"doc_hash": "00b8999e6c5cd850d77d67724377c79eed32fde405860b919b71c99ddcc7919c", "ref_doc_id": "68c574e8-7a7c-4ed6-adf6-2b014bf04adc"}, "13d951e9-fc93-43fe-8f10-7481fe639b33": {"doc_hash": "b9c83ac4af58a4a603e6b2bea12e3290e9f26ec84b4f58625b0b4f9b14c3ee68", "ref_doc_id": "68c574e8-7a7c-4ed6-adf6-2b014bf04adc"}}, "docstore/data": {"8c759dad-b024-463c-b108-d0e508e4b3d4": {"__data__": {"id_": "8c759dad-b024-463c-b108-d0e508e4b3d4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "68c574e8-7a7c-4ed6-adf6-2b014bf04adc", "node_type": "4", "metadata": {}, "hash": "b3cd6b969ea1bb9dd4b70cd54ca531b37c4a9e2a9982c42d3d6999b0f9fb7e40"}, "3": {"node_id": "139b4352-c8f5-476f-a3d5-f4a121591f37", "node_type": "1", "metadata": {}, "hash": "b9d3dbbf8cd1893bce6d5cdfe64f53930de154f5659ad818067aec1a668eaae3"}}, "hash": "169d139ce04e3faabd0e2f2bb73671e452f910dda5d78bade12e90dd62123217", "text": "Elevator Example\n\nElevator Door Circuit\n\n\u25ba Design a circuit to control an elevator door in a 3-story building\n\nOutput\n\nO = door closed 1 = door open\n\nTo give you an example of where this might could be used, let's consider a circuit which controls opening and closing the door on an elevator in a three story building.\n\nFor the output of our circuit, we need to produce the value 0 when we want the elevator door to be closed, and output the value 1 when we want the elevator door to be open.\n\nElevator Door Circuit\n\n\u25ba Design a circuit to control an elevator door in a 3-story building\n\ni\n\n\n\nOutput\n\nO = door closed 1 = door open\n\nM \u2794 motion sensor\n\n0 = elevator is stopped 1 = elevator is moving\n\nii\n\ni\n\nFor the inputs to our circuit, one of them will be labeled, M. Input M comes from a motion sensor that the engineers have put into the elevator. The purpose of this motion sensor is to let our circuit know is the elevator is moving or not. When our circuit sees the value 0 on input M, it means that the elevator is currently stopped. When our circuit sees the value 1 on input M, it means that the elevator is currently moving.\n\nElevator Door Circuit\n\n\u25ba Design a circuit to control an elevator door in a 3-story building\n\ni -\n\n\u00b7 -\n\nOutput\n\n0 = door closed 1 = door open\n\nInputs\n\nM \u2794 motion sensor\n\nO = elevator is stopped 1 = elevator is moving\n\nii\n\nF1, F2, F3 \u2794 floor sensors\n\n1 = elevator is aligned\n\ni\n\nwith floor 0 = elevator is not\n\naligned with floor\n\nThere will be three other inputs to our circuit. These inputs are labeled, F1, F2 and F3. These inputs will come from floor sensors, whose purpose is to let us know if the elevator is aligned with a given floor. For example, the F1 sensor will give our circuit the value 1 when the elevator is currently aligned with floor #1. If the elevator is not currently aligned with floor #1, then the F1 sensor will give our circuit the value 0.\n\nThe F2 and F3 sensors perform the same for floors 2 and 3 respectively.\n\n0\n\n0\n\n0\n\n0\n\nElevator Door Circuit\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n1\n\n0\n\n0\n\n1\n\n0\n\n0\n\n1\n\n0\n\nI I I I I I\n\nOpen elevator door when: elevator is not moving elevator is aligned with the floor FLOOR 3\n\nOutput\n\nO = door closed 1 = door open\n\nM \u2794 motion sensor 0 = elevator is stopped 1 = elevator is moving\n\n0\n\n0\n\n1\n\n0\n\n0\n\nF1 , F2, F3 \u2794 floor sensors\n\n0\n\n1 = elevator is aligned\n\n0\n\n0\n\n0\n\n1\n\n0\n\nwith floo r 0 = elevator is not\n\naligned with floor\n\nThe truth table seen in the slide, shows all 16 possible combinations of input values. The section of the truth table which has been circled in red indicates the input combinations where the elevator is not moving (where M=0).\n\nThe highlighted row indicates that the elevator is not moving, and it also is currently aligned with the third floor (F3=1). It is at this point where it is safe to open the elevator door to allow people to exit onto floor 3, and to enter from floor 3. The highlighted row therefore is a situation where we know we want the elevator door to be open, and so our circuit should output the value 1.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "139b4352-c8f5-476f-a3d5-f4a121591f37": {"__data__": {"id_": "139b4352-c8f5-476f-a3d5-f4a121591f37", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "68c574e8-7a7c-4ed6-adf6-2b014bf04adc", "node_type": "4", "metadata": {}, "hash": "b3cd6b969ea1bb9dd4b70cd54ca531b37c4a9e2a9982c42d3d6999b0f9fb7e40"}, "2": {"node_id": "8c759dad-b024-463c-b108-d0e508e4b3d4", "node_type": "1", "metadata": {}, "hash": "169d139ce04e3faabd0e2f2bb73671e452f910dda5d78bade12e90dd62123217"}, "3": {"node_id": "77b342e5-5348-4aba-b3fe-61c7d9fdba2c", "node_type": "1", "metadata": {}, "hash": "00b8999e6c5cd850d77d67724377c79eed32fde405860b919b71c99ddcc7919c"}}, "hash": "b9d3dbbf8cd1893bce6d5cdfe64f53930de154f5659ad818067aec1a668eaae3", "text": "0\n\n0\n\n0\n\n0\n\nElevator Door Circuit\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\nOpen elevator door when: elevator is not moving elevator is aligned with the floor FLOOR 2\n\n0\n\n0\n\n0\n\n0\n\n0\n\nOutput\n\n0\n\n0\n\n1\n\n1\n\n0\n\n1\n\n0 = door closed 1 = door open\n\nM \u2794 motion sensor\n\n0 = elevator is stopped\n\n1\n\n0\n\n0\n\n0\n\n1 = elevator is moving\n\n0\n\n0\n\n0\n\n0\n\nF1 , F2, F3 \u2794 floor sensors\n\n0\n\n1 = elevator is aligned\n\n0\n\n0\n\n0\n\n1\n\nwith floor 0 = elevator is not\n\n0\n\naligned with floor\n\nThis highlighted row also shows another situation where we know we want the elevator door to open. For this particular combination of input values, we can see that the elevator is not moving (M=0), and it is currently aligned with the 2nd floor (F2=1). We want the door to be open at this point, so our circuit should output the value 1.\n\n0\n\n0\n\n0\n\n0\n\nElevator Door Circuit\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\nOpen elevator door when: elevator is not moving elevator is aligned with the floor FLOOR 1\n\n0\n\n0\n\n0\n\n0\n\n0\n\nOutput\n\n0\n\n0\n\n1\n\n1\n\n0\n\n1\n\n0 = door closed 1 = door open\n\nM \u2794 motion sensor\n\n0 = elevator is stopped\n\n0\n\n0\n\n0\n\n1 = elevator is moving\n\n0\n\n0\n\n0\n\n0\n\n0\n\nF1, FZ, F3 \u2794 floor sensors 1 = elevator is ali gned\n\n0\n\n0\n\n0\n\nwith floor 0 = elevator is not\n\n0\n\naligned with floor\n\nHere shows the final situation where we would want the elevator door to be open. For this highlighted row, the elevator is stopped (M=0), and it is currently aligned with the\n\nfirst floor (F1=1). We want the door to be opened here, so our circuit should output value 1.\n\n0\n\n0\n\n0\n\n0\n\ni:m\n\nElevator Door Circuit\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n1\n\n1\n\n1\n\n1\n\n0\n\n1\n\n1\n\n0\n\n0\n\n1\n\n1\n\n1\n\n0\n\n1\n\n0\n\n1\n\n0\n\n1\n\n1\n\n1\n\n1\n\nOpen elevator door when: elevator is not moving elevator is aligned with the floor\n\nO = door closed 1 = door open\n\nM \u2794 motion sensor\n\n0 = elevator is stopped\n\n1\n\n1\n\n0\n\n0\n\n0\n\n0\n\n0\n\n1\n\n1 = elevator is moving\n\n1\n\n0\n\n1\n\n0\n\nF1, F2, F3 \u2794 floor sensors\n\n1\n\n0\n\n1\n\n1\n\n1 = elevator is aligned\n\n1\n\n1\n\n1\n\n1\n\n0\n\n0\n\n0\n\n1\n\nwith floor 0 = elevator is not\n\n1\n\n1\n\n1\n\n0\n\naligned with floor\n\n1\n\n1\n\n1\n\n1\n\nX\n\nThe section of the truth table which has been circled in red here indicates the input combinations where the elevator is currently moving (where M=1).\n\nThe highlighted row indicates that the elevator is moving, and it currently is not in\n\nalignment with any of the three floors. This is normal situation for the elevator, where it is moving and is in between floors - for example, when it has just left the 1st floor but has not arrived on the 2nd floor yet. For this situation, we know that we want the elevator door closed and so the circuit should output the value 0 for this combination of inputs.\n\nX\n\nX\n\nHere we see another combination of inputs which will occur during normal operation the elevator.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "77b342e5-5348-4aba-b3fe-61c7d9fdba2c": {"__data__": {"id_": "77b342e5-5348-4aba-b3fe-61c7d9fdba2c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "68c574e8-7a7c-4ed6-adf6-2b014bf04adc", "node_type": "4", "metadata": {}, "hash": "b3cd6b969ea1bb9dd4b70cd54ca531b37c4a9e2a9982c42d3d6999b0f9fb7e40"}, "2": {"node_id": "139b4352-c8f5-476f-a3d5-f4a121591f37", "node_type": "1", "metadata": {}, "hash": "b9d3dbbf8cd1893bce6d5cdfe64f53930de154f5659ad818067aec1a668eaae3"}, "3": {"node_id": "13d951e9-fc93-43fe-8f10-7481fe639b33", "node_type": "1", "metadata": {}, "hash": "b9c83ac4af58a4a603e6b2bea12e3290e9f26ec84b4f58625b0b4f9b14c3ee68"}}, "hash": "00b8999e6c5cd850d77d67724377c79eed32fde405860b919b71c99ddcc7919c", "text": "The highlighted row shows us that the elevator is moving, and also in alignment with the third floor. This will occur as the elevator is moving from the 2nd to the third floor, and it has just arrived at the third floor - but hasn't quite stopped yet. This will also happen when the elevator is getting ready to leave the third floor, and has not yet moved far enough away from it for the F3 sensor to give the value 0.\n\nBecause the elevator is still moving at this point, we would want the door to be closed, and so we need our circuit to output the value 0.\n\nX\n\nHere we see the same situation for the 2nd floor. This highlighted row indicates that the elevator is still moving but is currently aligned with the second floor. Another situation where this white could occur is when the elevator is moving from the first to the third floor. When it passes by the 2nd floor, the F2 sensor will output value 1, since the elevator will temporarily be in alignment with the 2nd floor as it moves past it. Since the elevator is still moving , we want to keep the door closed and so our circuit should output the value 0.\n\nX\n\nThis highlighted row indicates the same situation for the first floor. The elevator is moving, but is in alignment with the 1st floor. We want to keep the door closed for this situation and so our circuit should output value 0.\n\nX\n\nX\n\nThis highlighted row indicates that the elevator is not moving, but also is not in alignment with any of the three floors. This situation could occur if the elevator becomes stuck, or maybe if one of the passengers pushes the emergency stop button. Even though the elevator is not moving, it also is not in alignment with the floor and so it is not safe to open the door. Our circuit should output the value 0 for this situation.\n\nX\n\nFor the circuit in this example, the rows that we have filled in indicate the only positions where we know that we definitely want the elevator door open or closed. For all other rows in the table, we do not care what the circuit outputs. Take the following two rows for instance:\n\nX\n\nThese two did rose indicate an impossible situation. In other words, it is not possible for our circuit to see these highlighted combinations of inputs. Both of these rows show a F2 and F3 sensor values of 1. These values indicate that the elevator is currently in alignment with both the 2nd and the third floors at the same time. The first highlighted row indicates this situation while the elevator is not moving, and the second highlighted row indicates this situation while the elevator is moving. In either case, it is not possible for the elevator to be in alignment with two floors at the same time, and thus not possible for our circuit to see these combinations of inputs.\n\nWhen we have situations where the input combinations are impossible to obtain, then it does not matter what output our circuit produces in those cases. As such, we consider them to be \"don't care\" situations and so we indicate this by placing the value X for the output on these rows.\n\nX\n\nIncidentally, all remaining rows in this truth table are \"don't care\" situations. All remaining rose are situations where multiple floor sensors are outputting the value 1 at the same time. Again, not possible for multiple floor sensors to be outputting the value 1 simultaneously.\n\nNote: Is actually is theoretically possible for multiple floor sensors to output 1's at the same time if there is a sensor malfunction. We are actually ignoring that possibility here, since this example's purpose is to teach about \"don't care\" situations and not about handling malfunctions.\n\nX\n\nOnce we have our truth table complete, we can fill in the K-map.\n\nX\n\nIf we created all of the X's as if they were 0's, then the only 1's which are present in this K-map are independent 1's (i.e. they are not adjacent to any others). Writing this\n\nequation would produce three terms, where each of them contain all four variables: ~MF1~F2~F3 + ~M~F1F2~F3 + ~M~F1~F2F3\n\nX\n\nOn the other hand, we should use some of the X's to act as 1's in order to be able to create larger groupings. As we've seen from earlier examples, larger groupings allow us to produce simpler circuits because they eliminate some of the variables.\n\nThe X's and 1's are not positioned in such a way that we could create a group of eight. It looks like you might could create a group of nine, or group of 6, but we are only allowed to create groups where the size of them are powers of 2.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "13d951e9-fc93-43fe-8f10-7481fe639b33": {"__data__": {"id_": "13d951e9-fc93-43fe-8f10-7481fe639b33", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "68c574e8-7a7c-4ed6-adf6-2b014bf04adc", "node_type": "4", "metadata": {}, "hash": "b3cd6b969ea1bb9dd4b70cd54ca531b37c4a9e2a9982c42d3d6999b0f9fb7e40"}, "2": {"node_id": "77b342e5-5348-4aba-b3fe-61c7d9fdba2c", "node_type": "1", "metadata": {}, "hash": "00b8999e6c5cd850d77d67724377c79eed32fde405860b919b71c99ddcc7919c"}}, "hash": "b9c83ac4af58a4a603e6b2bea12e3290e9f26ec84b4f58625b0b4f9b14c3ee68", "text": "We can however, pretend that all of the X's on the 2nd row are 1's, and then we could create a group of four with the 1 which was already present on this row.\n\nX\n\nAnd don't try to create a group of four with the X's which make up the third column! Doing so will cause us to create an unnecessary group - and unnecessary groups will calls unnecessary terms in the expression (making the expression to be more complex than it should be.\n\nYou only want the X's to be treated as 1's if it will allow you to group them with the real 1's in the table.\n\nX\n\nIf we allow the top two X's on the F2F3 row to act as 1's, we can create two groups of size 4 with the 1's which are present on the top row.\n\nX\n\nOur final circuit that we obtain from this K-map is: ~MF1 + ~MF2 + ~MF3\n\nThe circuit expression makes sense when you read it in English. It literally states that we should open the door if:\n\n\u2022 \u2022\n\nThe elevator is not moving AND is in alignment with floor 1 OR The elevator is not moving AND is in alignment with floor 2 OR The elevator is not moving AND is in alignment with floor 3\n\nThe original version of the expression, before we learned to use the X's to our advantage, was much more complex: ~MF1~F2~F3 + ~M~F1F2~F3 + ~M~F1~F2F3 The elevator is not moving AND is in alignment with floor 1 AND not in alignment with floor 2 AND not in alignment with floor 3 OR\n\n\n\n\n\n\n\nThe elevator is not moving AND is in alignment with floor 2 AND not in alignment with floor 1 AND not in alignment with floor 3 OR The elevator is not moving AND is in alignment with floor 3 AND not in alignment with floor 1 AND not in alignment with floor 2", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"68c574e8-7a7c-4ed6-adf6-2b014bf04adc": {"node_ids": ["8c759dad-b024-463c-b108-d0e508e4b3d4", "139b4352-c8f5-476f-a3d5-f4a121591f37", "77b342e5-5348-4aba-b3fe-61c7d9fdba2c", "13d951e9-fc93-43fe-8f10-7481fe639b33"], "metadata": {}}}}